import logging
import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor
from aiogram.types import Message


logging.basicConfig(level=logging.INFO)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

API_TOKEN = "–í–ê–® –¢–û–ö–ï–ù"  # –°–¥–µ–ª–∞—Ç—å —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –º–æ–∂–Ω–æ —Ç—É—Ç - https://t.me/BotFather
ADMIN = None  # –£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID –∞–∫–∫–∞—É–Ω—Ç–∞ –º–æ–∂–Ω–æ —Ç—É—Ç - https://t.me/getmyid_bot

Start_Photo, Help_Photo, Vacancy_Photo, Events_Photo, Spam_Photo = "photo/Menu.jpg", "photo/Help.jpg", \
    "photo/Vacancy.jpg", "photo/Events.jpg", "photo/Spam.jpg"  # –ö–æ–Ω—Ñ–∏–≥ –≤—Å–µ—Ö —Ñ–æ—Ç–æ –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN, parse_mode=types.ParseMode.HTML)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (database1 - –¥–ª—è —Ä–∞—Å—Å—ã–ª–æ–∫, –∞–¥–º–∏–Ω–∫–∏ –∏ –ø—Ä–æ—á–µ–≥–æ. database2 - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤–∞–∫–∞–Ω—Å–∏–π. database3 - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π)
conn1 = sqlite3.connect('db/database1.db')
cur1 = conn1.cursor()
cur1.execute("""CREATE TABLE IF NOT EXISTS bot(
   user_id INTEGER);
""")
conn1.commit()
conn1.commit()
conn2 = sqlite3.connect('db/database2.db')
cursor2 = conn2.cursor()
cursor2.execute('''CREATE TABLE IF NOT EXISTS bot2
                  (id INTEGER PRIMARY KEY AUTOINCREMENT,
                   job TEXT);''')
conn2.commit()
conn3 = sqlite3.connect('db/database3.db')
cursor3 = conn3.cursor()
cursor3.execute('''CREATE TABLE IF NOT EXISTS bot3
                  (id INTEGER PRIMARY KEY AUTOINCREMENT,
                   event TEXT);''')
conn3.commit()


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è FSM (Finite State Machine)
class AdminStates(StatesGroup):
    ADDING_SPAM = State()
    ADDING_JOB = State()
    ADDING_EVENTS = State()
    REMOVE_EVENTS = State()
    REMOVE_JOB = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(Command('start'))
async def cmd_start(message: types.Message):
    if message.from_user.id == ADMIN:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            'üîÑ <b> –ß–∞—Ç-–±–æ—Ç –í–æ–ª–æ–Ω—Ç—ë—Ä—ã –õ–∞–Ω–≥–µ–ø–∞—Å–∞ </b> - –ó–ê–ü–£–°–ö–ê–ï–¢–°–Ø, –ü–û–ñ–ê–õ–£–ô–°–¢–ê, –ü–û–î–û–ñ–î–ò–¢–ï... üîÑ',
            parse_mode='HTML')
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</b>. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å.
                """, parse_mode="HTML", reply_markup=keyboard)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ üíº‚Äç"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üìã"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            'üîÑ <b> –ß–∞—Ç-–±–æ—Ç –í–æ–ª–æ–Ω—Ç—ë—Ä—ã –õ–∞–Ω–≥–µ–ø–∞—Å–∞ </b> - –ó–ê–ü–£–°–ö–ê–ï–¢–°–Ø, –ü–û–ñ–ê–õ–£–ô–°–¢–ê, –ü–û–î–û–ñ–î–ò–¢–ï... üîÑ',
            parse_mode='HTML')
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å.
                """, parse_mode="HTML", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –†–∞—Å—Å—ã–ª–∫–∞ üìù
@dp.message_handler(content_types=['text'], text='–†–∞—Å—Å—ã–ª–∫–∞ üìù')
async def text_spam(message: Message):
    if message.from_user.id == ADMIN:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîÑÔ∏è"))
        await AdminStates.ADDING_SPAM.set()
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Spam_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–ù–∞–ø–∏—à–∏—Ç–µ <b>—Ç–µ–∫—Å—Ç</b>, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å <b>—Ä–∞—Å—Å—ã–ª–∫—É</b> –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —á–∞—Ç-–±–æ—Ç–æ–º.
                """, parse_mode="HTML", reply_markup=keyboard)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîÑÔ∏è"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Spam_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å <b>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>.
                """, parse_mode="HTML", reply_markup=keyboard)


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
@dp.message_handler(state=AdminStates.ADDING_SPAM)
async def process_spam(message: Message, state: FSMContext):
    if message.text == '–ù–∞–∑–∞–¥ üîÑÔ∏è':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.
                """, parse_mode="HTML", reply_markup=keyboard)
        await state.finish()
    else:
        cur1.execute(f'''SELECT user_id FROM bot''')
        spam_base = cur1.fetchall()
        print(spam_base)
        for z in range(len(spam_base)):
            print(spam_base[z][0])
        for z in range(len(spam_base)):
            await bot.send_message(spam_base[z][0], message.text)
            await message.answer(
                """
–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ <b>—É—Å–ø–µ—à–Ω–æ</b>. ‚úÖ
                """, parse_mode="HTML")
        await state.finish()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï
@dp.message_handler(content_types=['text'], text='–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï')
async def text_adding_job(message: types.Message):
    if message.chat.id == ADMIN:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîÑÔ∏è"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Vacancy_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
üíº–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å <b>–≤–∞–∫–∞–Ω—Å–∏—é</b>, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É:

üìã<b>(–†–ê–ë–û–¢–ê | –û–ü–ò–°–ê–ù–ò–ï –†–ê–ë–û–¢–´ | –ö–û–ù–¢–ê–ö–¢–´)</b>

‚ö†Ô∏è<b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ</b> —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏!
                """, parse_mode="HTML", reply_markup=keyboard)
        await AdminStates.ADDING_JOB.set()


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤–∞–∫–∞–Ω—Å–∏–∏
@dp.message_handler(state=AdminStates.ADDING_JOB)
async def process_add_text(message: types.Message, state: FSMContext):
    if message.text == '–ù–∞–∑–∞–¥ üîÑÔ∏è':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.
                """, parse_mode="HTML", reply_markup=keyboard)
        await state.finish()
    else:
        admin_text = message.text
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        cur2 = conn2.cursor()
        cur2.execute("INSERT INTO bot2 (job) VALUES (?)", (admin_text,))
        conn2.commit()
        await state.finish()
        await message.answer('‚úÖ –í–∞–∫–∞–Ω—Å–∏—è —É—Å–ø–µ—à–Ω–æ <b>–¥–æ–±–∞–≤–ª–µ–Ω–∞</b>.', parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ üíº‚Äç
@dp.message_handler(content_types=['text'], text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ üíº‚Äç')
async def view_job(message: types.Message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cur2 = conn2.cursor()
    cur2.execute("SELECT job FROM bot2")
    job = cur2.fetchall()
    if job:
        response = '<b>üíº –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏:</b>\n'
        for text in job:
            response += f'- {text[0]}\n'
    else:
        response = 'üíº –í–∞–∫–∞–Ω—Å–∏–∏ <b>–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b>.'
    await message.answer(
        """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
        """, parse_mode="HTML")
    with open(Vacancy_Photo, 'rb') as file:
        file.seek(0)
        await message.answer_photo(photo=file)
        file.close()
        await message.answer(response, parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå
@dp.message_handler(content_types=['text'], text='–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå')
async def remove_job(message: types.Message):
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä–∫—É –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π
    cur2 = conn2.cursor()
    cur2.execute("SELECT id, job FROM bot2")
    vacancies = cur2.fetchall()
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if vacancies:
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        vacancies_list = "\n".join([f"{v[0]}. {v[1]}" for v in vacancies])
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ <b>–Ω–æ–º–µ—Ä</b> –≤–∞–∫–∞–Ω—Å–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n" + vacancies_list, parse_mode="HTML")
        # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await AdminStates.REMOVE_JOB.set()
    else:
        await message.answer(
            """
–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö <b>–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</b> –≤–∞–∫–∞–Ω—Å–∏–∏.
            """, parse_mode="HTML")


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏
@dp.message_handler(state=AdminStates.REMOVE_JOB)
async def process_add_text(message: types.Message, state: FSMContext):
    if message.text == '–ù–∞–∑–∞–¥ üîÑÔ∏è':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</b>.
                """, parse_mode="HTML", reply_markup=keyboard)
        await state.finish()
    else:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–º–µ—Ä–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
        vacancy_id = message.text.strip()
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º
        cur2 = conn2.cursor()
        cur2.execute("SELECT id FROM bot2")
        available_ids = [v[0] for v in cur2.fetchall()]
        if vacancy_id.isdigit() and int(vacancy_id) in available_ids:
            vacancy_id = int(vacancy_id)
            # –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            cur2.execute(f"DELETE FROM bot2 WHERE id = {vacancy_id}")
            conn2.commit()
            await message.answer(
                """
–í–∞–∫–∞–Ω—Å–∏—è —É—Å–ø–µ—à–Ω–æ <b>—É–¥–∞–ª–µ–Ω–∞</b>.
                """, parse_mode="HTML")
        else:
            await message.answer(
                """
<b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π</b> –Ω–æ–º–µ—Ä –≤–∞–∫–∞–Ω—Å–∏–∏.
                """, parse_mode="HTML")
        # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await state.finish()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï
@dp.message_handler(content_types=['text'], text='–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï')
async def text_adding_events(message: types.Message):
    if message.chat.id == ADMIN:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîÑÔ∏è"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Events_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
üß© –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å <b>–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</b>, –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É:

üìã<b>(–ù–ê–ó–í–ê–ù–ò–ï –ú–ï–†–û–ü–†–ò–Ø–¢–ò–Ø | –ú–ï–°–¢–û –ü–†–û–í–ï–î–ï–ù–ò–Ø | –î–ê–¢–ê | –í–†–ï–ú–Ø)</b>

‚ö†Ô∏è<b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ</b> —Å–æ–±–ª—é–¥–∞–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!
                """, parse_mode="HTML", reply_markup=keyboard)
        await AdminStates.ADDING_EVENTS.set()


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@dp.message_handler(state=AdminStates.ADDING_EVENTS)
async def process_adding_events(message: types.Message, state: FSMContext):
    if message.text == '–ù–∞–∑–∞–¥ üîÑÔ∏è':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ</b>.
                """, parse_mode="HTML", reply_markup=keyboard)
        await state.finish()
    else:
        admin_text = message.text
        cur3 = conn3.cursor()
        cur3.execute("INSERT INTO bot3 (event) VALUES (?)", (admin_text,))
        conn3.commit()
        await state.finish()
        await message.answer(
            """
–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ <b>–¥–æ–±–∞–≤–ª–µ–Ω–æ</b>.
            """, parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üìã
@dp.message_handler(content_types=['text'], text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üìã')
async def view_job(message: types.Message):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cur3 = conn3.cursor()
    cur3.execute("SELECT event FROM bot3")
    job = cur3.fetchall()
    if job:
        response = 'üß© –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:\n'
        for text in job:
            response += f'- {text[0]}\n'
    else:
        response = 'üß© –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.'
    await message.answer(
        """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
        """, parse_mode="HTML")
    with open(Events_Photo, 'rb') as file:
        file.seek(0)
        await message.answer_photo(photo=file)
        file.close()
        await message.answer(response, parse_mode="HTML")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå
@dp.message_handler(content_types=['text'], text='–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå')
async def remove_job(message: types.Message):
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä–∫—É –≤—Å–µ—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    cur3 = conn3.cursor()
    cur3.execute("SELECT id, event FROM bot3")
    event = cur3.fetchall()
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if event:
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        event_list = "\n".join([f"{v[0]}. {v[1]}" for v in event])
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n" + event_list)
        # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await AdminStates.REMOVE_EVENTS.set()
    else:
        await message.answer("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.")


# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
@dp.message_handler(state=AdminStates.REMOVE_EVENTS)
async def process_add_text(message: types.Message, state: FSMContext):
    if message.text == '–ù–∞–∑–∞–¥ üîÑÔ∏è':
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Start_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>.
                """, parse_mode="HTML", reply_markup=keyboard)
        await state.finish()
    else:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–º–µ—Ä–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        event_id = message.text.strip()
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º
        cur3 = conn3.cursor()
        cur3.execute("SELECT id FROM bot3")
        available_ids = [v[0] for v in cur3.fetchall()]
        if event_id.isdigit() and int(event_id) in available_ids:
            event_id = int(event_id)
            # –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            cur3.execute(f"DELETE FROM bot3 WHERE id = {event_id}")
            conn3.commit()
            await message.answer("–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ.")
        else:
            await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.")
        # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await state.finish()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ü–æ–º–æ—â—å ‚ùî
@dp.message_handler(content_types=['text'], text='–ü–æ–º–æ—â—å ‚ùî')
async def help(message: types.Message):
    if message.chat.id == ADMIN:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ üìù"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ûï"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é ‚ùå"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Help_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
üõ†Ô∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è <b>–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê</b> —á–∞—Ç-–±–æ—Ç–∞. üõ†Ô∏è


<b>–†–∞—Å—Å—ã–ª–∫–∞</b> üìù - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è —á–∞—Ç-–±–æ—Ç–æ–º.

<b>–î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é</b> ‚ûï - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–∞–∫–∞–Ω—Å–∏—é. –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à—É –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –≤–∞–∫–∞–Ω—Å–∏—é.

<b>–î–æ–±–∞–≤–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</b> ‚ûï - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ. –û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –≤–∏–¥–µ—Ç—å –≤–∞—à–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.

<b>–£–¥–∞–ª–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</b> ‚ùå - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ. –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∞–∫–∂–µ –ø—Ä–æ–ø–∞–¥—ë—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.

<b>–£–¥–∞–ª–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é</b> ‚ùå - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –≤–∞–∫–∞–Ω—Å–∏—é. –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∞–∫–∂–µ –ø—Ä–æ–ø–∞–¥—ë—Ç –≤–∞–∫–∞–Ω—Å–∏—è.

<b>–ü–æ–º–æ—â—å</b> ‚ùî - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–∞—Ç-–±–æ—Ç–æ–º.
                """, parse_mode="HTML", reply_markup=keyboard)
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ üíº‚Äç"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üìã"))
        keyboard.add(types.InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ùî"))
        await message.answer(
            """
üîÑÔ∏è –î–µ–π—Å—Ç–≤–∏–µ <b>–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è</b>, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... üîÑÔ∏è
            """, parse_mode="HTML")
        with open(Help_Photo, 'rb') as file:
            file.seek(0)
            await message.answer_photo(photo=file)
            file.close()
            await message.answer(
                """
üõ†Ô∏è –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è <b>–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø</b> —á–∞—Ç-–±–æ—Ç–∞. üõ†Ô∏è


<b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏</b> üíº - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞.

<b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</b> üìã - –ö–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.

<b>–ü–æ–º–æ—â—å</b> ‚ùî - –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —á–∞—Ç-–±–æ—Ç–æ–º.
                """, parse_mode="HTML", reply_markup=keyboard)


if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp)
